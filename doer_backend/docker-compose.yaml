services:
  db:
    image: postgres:14-alpine
    ports:
      - 5432:5432
    volumes:
      - ~/apps/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=pg-user
      - POSTGRES_DB=testdb
    restart: always
    container_name: doer_db
    networks:
      - doer_db_network

  api:
    build: 
      context: ./
      dockerfile: Dockerfile.doer_api
    container_name: doer_api
    image: doer_api:0.0.3
    entrypoint: ./wait-for-it.sh doer_db:5432 --strict -- node server.js --force_sync true
    ports:
      - "127.0.0.1:8080:8080"
    networks:
      - doer_db_network
    restart: on-failure

  zookeeper:
    restart: always
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper-volume:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    networks:
      - doer_db_network

  kafka:
    restart: always
    image: docker.io/bitnami/kafka:3.3
    ports:
      - "9093:9093"
    volumes:
      - "kafka-volume:/bitnami"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://localhost:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
    depends_on:
      - zookeeper
    networks:
      - doer_db_network

volumes:
  kafka-volume:
  zookeeper-volume:

networks:
    doer_db_network:
      name: doer_network

